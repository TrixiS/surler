import Cookies from "cookies";
import { nanoid } from "nanoid/async";
import type {
  GetServerSideProps,
  InferGetServerSidePropsType,
  NextPage,
} from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";

const Home: NextPage<InferGetServerSidePropsType<typeof getServerSideProps>> = (
  props
) => {
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex min-h-screen flex-col items-center p-4">
        Your user ID is {props.userId}
      </main>
    </>
  );
};

export const getServerSideProps: GetServerSideProps<{
  userId: string;
}> = async ({ req, res }) => {
  const userIdKey = "userId";

  if (req.cookies[userIdKey]) {
    return { props: { userId: req.cookies[userIdKey] } };
  }

  const userId = await nanoid();
  const cookies = new Cookies(req, res);
  cookies.set(userIdKey, userId, { httpOnly: true, expires: undefined });

  return { props: { userId } };
};

export default Home;
